{"version":3,"sources":["utils.js","SingleColor.js","App.jsx","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","_ref","rgb","weight","index","hexColor","alert","setAlert","useState","bcg","join","hexValue","concat","useEffect","timeout","setTimeout","clearTimeout","React","createElement","onClick","navigator","clipboard","writeText","className","style","backgroundColor","App","color","setColor","gap","setGap","error","setError","data","setData","Values","all","Fragment","type","onChange","e","target","value","name","id","onSubmit","preventDefault","colors","parseInt","console","log","placeholder","map","Object","assign","key","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2KAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAsB,IAAfD,EAAIE,OAAe,IAAMF,EAAMA,EAOzBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICwBvDC,MAxBKC,IAAkC,IAAjC,IAACC,EAAG,OAACC,EAAM,MAACC,EAAK,SAACC,GAASJ,EAC9C,MAAOK,EAAMC,GAAUC,oBAAS,GAC1BC,EAAIP,EAAIQ,KAAK,KAEbC,GADKf,KAAYM,GACT,IAAAU,OAAMP,IASpB,OAPAQ,oBAAU,KACR,MAAMC,EAASC,WAAW,KACxBR,GAAS,IACR,KACH,MAAO,IAAKS,aAAaF,IACzB,CAACR,IAEIW,IAAAC,cAAA,WAASC,QACdA,KAAKZ,GAAS,GACda,UAAUC,UAAUC,UAAUX,IAC5BY,UAAS,SAAAX,OAAWR,EAAO,IAAM,eAAiBoB,MAAO,CAACC,gBAAgB,OAADb,OAASH,EAAG,OACvFQ,IAAAC,cAAA,KAAGK,UAAU,iBAAiBpB,EAAO,KACrCc,IAAAC,cAAA,KAAGK,UAAU,gBAAgBZ,GAC5BL,GAASW,IAAAC,cAAA,KAAGK,UAAU,SAAQ,0B,gBCgCpBG,MApDf,WAEE,MAAOC,EAAMC,GAAUpB,mBAAS,KACzBqB,EAAIC,GAAQtB,mBAAS,KACrBuB,EAAMC,GAAUxB,oBAAS,IACzByB,EAAKC,GAAS1B,mBAAS,IAAI2B,IAAO,WAAWC,IAAI,KAqBxD,OAAOnB,IAAAC,cAAAD,IAAAoB,SAAA,KAEPpB,IAAAC,cAAA,WAASK,UAAU,aACnBN,IAAAC,cAAA,MAAIK,WAAS,GAAC,mBACZN,IAAAC,cAAA,SAAOoB,KAAK,SAASC,SAAWC,GAAIV,EAAOU,EAAEC,OAAOC,OAAQC,KAAK,GAAGD,MAAOb,EAAKe,GAAG,KACpF3B,IAAAC,cAAA,UAAI,qBACHD,IAAAC,cAAA,QAAMK,UAAU,OAAOsB,SAzBPL,IAClBA,EAAEM,iBAEF,IACE,IAAIC,EAAO,IAAIZ,IAAOR,GAAOS,IAAIY,SAASnB,IAC1CK,EAAQa,GACRE,QAAQC,IAAIH,GAGZ,MAAOhB,GACPC,GAAS,GACTiB,QAAQC,IAAInB,MAeVd,IAAAC,cAAA,SAAOoB,KAAK,OAAOK,KAAK,QAAQC,GAAG,GAAGF,MAAOf,EAAOY,SAAWC,GAAIZ,EAASY,EAAEC,OAAOC,OAAQS,YAAY,UAAU5B,UAAS,GAAAX,OAAKmB,EAAQ,QAAS,QAClJd,IAAAC,cAAA,UAAQK,UAAU,MAAMe,KAAK,UAAS,YAI1CrB,IAAAC,cAAA,WAASK,UAAU,UACjBU,EAAKmB,IAAI,CAACzB,EAAMvB,IACTa,IAAAC,cAAClB,EAAWqD,OAAAC,OAAA,CAACC,IAAKnD,GAAWuB,EAAK,CAAEvB,MAAOA,EAASC,SAAUsB,EAAMlC,WCxClE+D,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3C,IAAAC,cAACD,IAAM4C,WAAU,KACf5C,IAAAC,cAACQ,EAAG,S","file":"static/js/main.f93fecf2.chunk.js","sourcesContent":["function componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length === 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\r\n}\r\n\r\nexport default rgbToHex;\r\n","import React, { useState, useEffect } from 'react'\r\nimport rgbToHex from './utils'\r\n\r\n\r\n\r\n\r\nconst SingleColor = ({rgb,weight,index,hexColor}) => {\r\n  const [alert,setAlert]=useState(false)\r\n  const bcg=rgb.join(',')\r\n  const hex= rgbToHex(...rgb)\r\n  const hexValue =`#${hexColor}`\r\n\r\n  useEffect(()=>{\r\n    const timeout= setTimeout(() => {\r\n      setAlert(false)\r\n    }, 3000);\r\n    return ()=> clearTimeout(timeout)\r\n  },[alert])\r\n\r\n  return <article onClick={\r\n    ()=>{setAlert(true)\r\n    navigator.clipboard.writeText(hexValue)}\r\n    } className={`color ${index >10 && 'color-light'}`} style={{backgroundColor: `rgb(${bcg})`}}>\r\n    <p className='percent-value'>{weight}%</p>\r\n    <p className='color-values'>{hexValue}</p>\r\n    {alert && <p className='alert'>Copied to clipboard </p>}\r\n\r\n  </article>\r\n}\r\n\r\nexport default SingleColor\r\n","import React, { useState } from 'react'\r\nimport SingleColor from './SingleColor'\r\n\r\nimport Values from 'values.js'\r\n\r\nfunction App() {\r\n\r\n  const [color,setColor]=useState(\"\");\r\n  const [gap,setGap]=useState(10);\r\n  const [error,setError]=useState(false)\r\n  const [data,setData]=useState(new Values(\"#f15025\").all(10))\r\n\r\nconst handleSubmit=(e)=>{\r\n  e.preventDefault()\r\n\r\n  try {\r\n    let colors=new Values(color).all(parseInt(gap));\r\n    setData(colors)\r\n    console.log(colors)\r\n\r\n    \r\n  } catch (error) {\r\n    setError(true)\r\n    console.log(error)\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  return <>\r\n  \r\n  <section className='container'>\r\n  <h3 className> Select % gap: </h3>\r\n    <input type=\"number\" onChange={(e)=>setGap(e.target.value)} name=\"\" value={gap} id=\"\" />\r\n   <h3>Color Generator :</h3> \r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <input type=\"text\" name=\"color\" id=\"\" value={color} onChange={(e)=>setColor(e.target.value)} placeholder='#f15025' className={`${error ? \"error\" :null}`} />\r\n      <button className=\"btn\" type=\"submit\">Submit</button>\r\n    </form>\r\n\r\n  </section>\r\n  <section className='colors'>\r\n   {data.map((color,index)=>{\r\n    return <SingleColor key={index} {...color} index={index}   hexColor={color.hex}/>\r\n   })}\r\n  </section>\r\n  </>\r\n  \r\n  \r\n \r\n\r\n\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}